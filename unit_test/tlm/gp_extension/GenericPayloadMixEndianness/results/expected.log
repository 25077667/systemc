
initiator_little_endian : TEST 1 : WRITE and READ to SLAVE LE 
initiator_little_endian : Send write request: A = 0x0, D = 0x1020304 @ 0 s
target_little_endian : burst write : A = 0x0, D = 0x1020304 @ 0 s
initiator_little_endian : Received ok response @ 10 ns

initiator_little_endian : Send read request: A = 0x0 @ 10 ns
target_little_endian : burst read : A = 0x0 @ 10 ns
initiator_little_endian : Received ok response @ 20 ns
initiator_little_endian : Receive read request: A = 0x0, D = 0x1020304 @ 20 ns

initiator_little_endian : SLAVE LE : WR_DATA equal to RD_DATA : OK



initiator_little_endian : TEST 2 : WRITE and READ to SLAVE BE 
initiator_little_endian : Send write request: A = 0x10000000, D = 0x1020304 @ 20 ns
target_big_endian : burst write : A = 0x0, D = 0x1020304 @ 20 ns
initiator_little_endian : Received ok response @ 30 ns

initiator_little_endian : Send read request: A = 0x10000000 @ 30 ns
target_big_endian : burst read : A = 0x0 @ 30 ns
initiator_little_endian : Received ok response @ 40 ns
initiator_little_endian : Receive read request: A = 0x10000000, D = 0x1020304 @ 40 ns

initiator_little_endian : SLAVE BE : WR_DATA equal to RD_DATA : OK



initiator_big_endian : TEST 1 : WRITE and READ to SLAVE LE 
initiator_big_endian : Send write request: A = 0x0, D = 0x1020304 @ 100 ns
target_little_endian : burst write : A = 0x0, D = 0x1020304 @ 100 ns
initiator_big_endian : Received ok response @ 110 ns

initiator_big_endian : Send read request: A = 0x0 @ 110 ns
target_little_endian : burst read : A = 0x0 @ 110 ns
initiator_big_endian : Received ok response @ 120 ns
initiator_big_endian : Receive read request: A = 0x0, D = 0x1020304 @ 120 ns

initiator_big_endian : SLAVE LE : WR_DATA equal to RD_DATA : OK



initiator_big_endian : TEST 2 : WRITE and READ to SLAVE BE 
initiator_big_endian : Send write request: A = 0x10000000, D = 0x1020304 @ 120 ns
target_big_endian : burst write : A = 0x0, D = 0x1020304 @ 120 ns
initiator_big_endian : Received ok response @ 130 ns

initiator_big_endian : Send read request: A = 0x10000000 @ 130 ns
target_big_endian : burst read : A = 0x0 @ 130 ns
initiator_big_endian : Received ok response @ 140 ns
initiator_big_endian : Receive read request: A = 0x10000000, D = 0x1020304 @ 140 ns

initiator_big_endian : SLAVE BE : WR_DATA equal to RD_DATA : OK



initiator_little_endian : TEST 3 : MIX WRITE and READ 
initiator_little_endian : Send write request: A = 0x200, D = 0x1020304 @ 240 ns
target_little_endian : burst write : A = 0x200, D = 0x1020304 @ 240 ns
initiator_little_endian : Received ok response @ 250 ns

initiator_little_endian : Send write request: A = 0x10000200, D = 0x1020304 @ 250 ns
target_big_endian : burst write : A = 0x200, D = 0x1020304 @ 250 ns
initiator_little_endian : Received ok response @ 260 ns

initiator_big_endian : Send read request: A = 0x200 @ 340 ns
target_little_endian : burst read : A = 0x200 @ 340 ns
initiator_big_endian : Received ok response @ 350 ns
initiator_big_endian : Receive read request: A = 0x200, D = 0x1020304 @ 350 ns

initiator_big_endian : SLAVE LE : WR_DATA equal to RD_DATA : OK

initiator_big_endian : Send read request: A = 0x10000200 @ 350 ns
target_big_endian : burst read : A = 0x200 @ 350 ns
initiator_big_endian : Received ok response @ 360 ns
initiator_big_endian : Receive read request: A = 0x10000200, D = 0x1020304 @ 360 ns

initiator_big_endian : SLAVE LE : WR_DATA equal to RD_DATA : OK

