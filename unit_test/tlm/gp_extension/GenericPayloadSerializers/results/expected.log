
 ###### TEST SERIALIZERS ###### 

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 256-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f
master_1 : READ  ARRAY = 0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 128-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00102030405060708090a0b0c0d0e0f0
master_1 : READ  ARRAY = 0x00102030405060708090a0b0c0d0e0f0

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 64-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x0001020304050607
master_1 : READ  ARRAY = 0x0001020304050607

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 48-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x001020304050
master_1 : READ  ARRAY = 0x001020304050

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 32-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00010203
master_1 : READ  ARRAY = 0x00010203

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 16-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x0010
master_1 : READ  ARRAY = 0x0010

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 8-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00
master_1 : READ  ARRAY = 0x00


 ###### TEST SERIALIZERS WITH BYTE-ENABLES ###### 

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 256-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f0
master_1 : READ  ARRAY = 0x00102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f0

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 128-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x000102030405060708090a0b0c0d0e0f
master_1 : READ  ARRAY = 0x000102030405060708090a0b0c0d0e0f

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 64-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x0010203040506070
master_1 : READ  ARRAY = 0x0010203040506070

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 48-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x000102030405
master_1 : READ  ARRAY = 0x000102030405

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 32-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00102030
master_1 : READ  ARRAY = 0x00102030

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 16-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x0001
master_1 : READ  ARRAY = 0x0001

master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 8-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00
master_1 : READ  ARRAY = 0x00


 ###### TEST SERIALIZERS WITH CUSTOMIZED BYTE-ENABLES ###### 

master_1 : case when WRITE uses BE and READ uses same BE 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 256-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f
master_1 : READ  ARRAY = 0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f
master_1 : BE    ARRAY = 1111 : BE  LENGTH = 4

master_1 : case when WRITE uses BE and READ uses same BE 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 256-bit operation : DON'T MATCH 
master_1 : WRITE ARRAY = 0x00102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f0
master_1 : READ  ARRAY = 0x001000004050000080900000c0d00000001000004050000080900000c0d00000
master_1 : BE    ARRAY = 1100 : BE  LENGTH = 4

master_1 : case when WRITE uses BE and READ does not 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 256-bit operation : DON'T MATCH 
master_1 : WRITE ARRAY = 0x00102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f0
master_1 : READ  ARRAY = 0x001002034050060780900a0bc0d00e0f001012134050161780901a1bc0d01e1f
master_1 : BE    ARRAY = 1100 : BE  LENGTH = 4

master_1 : case when WRITE uses BE and READ uses same BE 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 32-bit operation : MATCH  
master_1 : WRITE ARRAY = 0x00010203
master_1 : READ  ARRAY = 0x00010203
master_1 : BE    ARRAY = 11 : BE  LENGTH = 2

master_1 : case when WRITE uses BE and READ uses same BE 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 32-bit operation : DON'T MATCH 
master_1 : WRITE ARRAY = 0x00102030
master_1 : READ  ARRAY = 0x00002000
master_1 : BE    ARRAY = 10 : BE  LENGTH = 2

master_1 : case when WRITE uses BE and READ does not 
master_1 : Single WRITE transaction :  OK 
master_1 : Single READ transaction :  OK 
master_1 : read and write 32-bit operation : DON'T MATCH 
master_1 : WRITE ARRAY = 0x00102030
master_1 : READ  ARRAY = 0x00012003
master_1 : BE    ARRAY = 10 : BE  LENGTH = 2

SystemC: simulation stopped by user.
