3c3,4
< #   Copyright (C) 1992, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.
---
> #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
> #   Free Software Foundation, Inc.
25c26
< # The master version of this file is at the FSF in /home/gd/gnu/lib.
---
> # Please send patches to <config-patches@gnu.org>.
37a39,52
> # Use $HOST_CC if defined. $CC may point to a cross-compiler
> if test x"$CC_FOR_BUILD" = x; then
>   if test x"$HOST_CC" != x; then
>     CC_FOR_BUILD="$HOST_CC"
>   else
>     if test x"$CC" != x; then
>       CC_FOR_BUILD="$CC"
>     else
>       CC_FOR_BUILD=cc
>     fi
>   fi
> fi
> 
> 
54a70,106
>     *:NetBSD:*:*)
> 	# Netbsd (nbsd) targets should (where applicable) match one or
> 	# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
> 	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
> 	# switched to ELF, *-*-netbsd* would select the old
> 	# object file format.  This provides both forward
> 	# compatibility and a consistent mechanism for selecting the
> 	# object file format.
> 	# Determine the machine/vendor (is the vendor relevant).
> 	case "${UNAME_MACHINE}" in
> 	    amiga) machine=m68k-cbm ;;
> 	    arm32) machine=arm-unknown ;;
> 	    atari*) machine=m68k-atari ;;
> 	    sun3*) machine=m68k-sun ;;
> 	    mac68k) machine=m68k-apple ;;
> 	    macppc) machine=powerpc-apple ;;
> 	    hp3[0-9][05]) machine=m68k-hp ;;
> 	    ibmrt|romp-ibm) machine=romp-ibm ;;
> 	    *) machine=${UNAME_MACHINE}-unknown ;;
> 	esac
> 	# The Operating System including object format.
> 	if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
> 		| grep __ELF__ >/dev/null
> 	then
> 	    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
> 	    # Return netbsd for either.  FIX?
> 	    os=netbsd
> 	else
> 	    os=netbsdelf
> 	fi
> 	# The OS release
> 	release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
> 	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
> 	# contains redundant information, the shorter form:
> 	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
> 	echo "${machine}-${os}${release}"
> 	exit 0 ;;
63a116,120
> 	.data
> \$Lformat:
> 	.byte 37,100,45,37,120,10,0	# "%d-%x\n"
> 
> 	.text
64a122
> 	.align 4
67,77c125,137
< 	.frame \$30,0,\$26,0
< 	.prologue 0
< 	.long 0x47e03d80 # implver $0
< 	lda \$2,259
< 	.long 0x47e20c21 # amask $2,$1
< 	srl \$1,8,\$2
< 	sll \$2,2,\$2
< 	sll \$0,3,\$0
< 	addl \$1,\$0,\$0
< 	addl \$2,\$0,\$0
< 	ret \$31,(\$26),1
---
> 	.frame \$30,16,\$26,0
> 	ldgp \$29,0(\$27)
> 	.prologue 1
> 	.long 0x47e03d80 # implver \$0
> 	lda \$2,-1
> 	.long 0x47e20c21 # amask \$2,\$1
> 	lda \$16,\$Lformat
> 	mov \$0,\$17
> 	not \$1,\$18
> 	jsr \$26,printf
> 	ldgp \$29,0(\$26)
> 	mov 0,\$16
> 	jsr \$26,exit
80c140
< 	${CC-cc} $dummy.s -o $dummy 2>/dev/null
---
> 	$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null
82,84c142,143
< 		./$dummy
< 		case "$?" in
< 			7)
---
> 		case `./$dummy` in
> 			0-0)
87c146
< 			15)
---
> 			1-0)
90c149
< 			14)
---
> 			1-1)
93c152
< 			10)
---
> 			1-101)
96c155
< 			16)
---
> 			2-303)
98a158,160
> 			2-307)
> 				UNAME_MACHINE="alphaev67"
> 				;;
102c164,170
< 	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr [[A-Z]] [[a-z]]`
---
> 	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
> 	exit 0 ;;
>     Alpha\ *:Windows_NT*:*)
> 	# How do we know it's Interix rather than the generic POSIX subsystem?
> 	# Should we change UNAME_MACHINE based on the output of uname instead
> 	# of the specific Alpha model?
> 	echo alpha-pc-interix
110,112d177
<     amiga:NetBSD:*:*)
<       echo m68k-cbm-netbsd${UNAME_RELEASE}
<       exit 0 ;;
136a202,204
>     *:OS/390:*:*)
> 	echo i370-ibm-openedition
> 	exit 0 ;;
140,142d207
<     arm32:NetBSD:*:*)
< 	echo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
< 	exit 0 ;;
154c219
<     NILE:*:*:dcosx)
---
>     NILE*:*:*:dcosx)
199,201d263
<     atari*:NetBSD:*:*)
< 	echo m68k-atari-netbsd${UNAME_RELEASE}
< 	exit 0 ;;
205,206c267,291
<     sun3*:NetBSD:*:*)
< 	echo m68k-sun-netbsd${UNAME_RELEASE}
---
>     # The situation for MiNT is a little confusing.  The machine name
>     # can be virtually everything (everything which is not
>     # "atarist" or "atariste" at least should have a processor
>     # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
>     # to the lowercase version "mint" (or "freemint").  Finally
>     # the system name "TOS" denotes a system which is actually not
>     # MiNT.  But MiNT is downward compatible to TOS, so this should
>     # be no problem.
>     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
>         echo m68k-atari-mint${UNAME_RELEASE}
> 	exit 0 ;;
>     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
> 	echo m68k-atari-mint${UNAME_RELEASE}
>         exit 0 ;;
>     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
>         echo m68k-atari-mint${UNAME_RELEASE}
> 	exit 0 ;;
>     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
>         echo m68k-milan-mint${UNAME_RELEASE}
>         exit 0 ;;
>     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
>         echo m68k-hades-mint${UNAME_RELEASE}
>         exit 0 ;;
>     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
>         echo m68k-unknown-mint${UNAME_RELEASE}
211,213d295
<     mac68k:NetBSD:*:*)
< 	echo m68k-apple-netbsd${UNAME_RELEASE}
< 	exit 0 ;;
226,234d307
<     "Power Macintosh":Darwin:*:*)
< 	echo powerpc-apple-macosx
< 	exit 0 ;;
<     i386:Darwin:*:*)
< 	echo i386-apple-macosx
< 	exit 0 ;;
<     macppc:NetBSD:*:*)
<         echo powerpc-apple-netbsd${UNAME_RELEASE}
<         exit 0 ;;
244c317
<     2020:CLIX:*:*)
---
>     2020:CLIX:*:* | 2430:CLIX:*:*)
249c322,327
< 	int main (argc, argv) int argc; char **argv; {
---
> #ifdef __cplusplus
> #include <stdio.h>  /* for printf() prototype */
> 	int main (int argc, char *argv[]) {
> #else
> 	int main (argc, argv) int argc; char *argv[]; {
> #endif
264c342
< 	${CC-cc} $dummy.c -o $dummy \
---
> 	$CC_FOR_BUILD $dummy.c -o $dummy \
285,287c363,367
<         if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then
< 	if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \
< 	     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then
---
> 	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
> 	then
> 	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
> 	       [ ${TARGET_BINARY_INTERFACE}x = x ]
> 	    then
292c372,373
<         else echo i586-dg-dgux${UNAME_RELEASE}
---
> 	else
> 	    echo i586-dg-dgux${UNAME_RELEASE}
330c411
< 		${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
---
> 		$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
359c440
<     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and
---
>     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
378c459
< 	    9000/6?? | 9000/7?? | 9000/80[24] | 9000/8?[13679] | 9000/892 )
---
> 	    9000/[678][0-9][0-9])
379a461,462
> 
>               #define _HPUX_SOURCE
410c493
< 	(${CC-cc} $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`
---
> 	(CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`
442c525
< 	${CC-cc} $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
---
> 	$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
451a535,537
>     *9??*:MPE/iX:*:*)
> 	echo hppa1.0-hp-mpeix
> 	exit 0 ;;
467a554,556
>     hppa*:OpenBSD:*:*)
> 	echo hppa-unknown-openbsd
> 	exit 0 ;;
498c587
< 	echo t90-cray-unicos${UNAME_RELEASE}
---
> 	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
501c590,593
< 	echo t3e-cray-unicosmk${UNAME_RELEASE}
---
> 	echo alpha-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
> 	exit 0 ;;
>     CRAY*SV1:*:*:*)
> 	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
507c599
<         FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\///'`
---
>         FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
514,516d605
<     hp3[0-9][05]:NetBSD:*:*)
< 	echo m68k-hp-netbsd${UNAME_RELEASE}
< 	exit 0 ;;
519a609,611
>     i?86:BSD/386:*:* | i?86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
> 	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
> 	exit 0 ;;
523,525d614
<     i?86:BSD/386:*:* | i?86:BSD/OS:*:*)
< 	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
< 	exit 0 ;;
532,534d620
<     *:NetBSD:*:*)
< 	echo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
< 	exit 0 ;;
543a630,638
>     i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
> 	# How do we know it's Interix rather than the generic POSIX subsystem?
> 	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
> 	# UNAME_MACHINE based on the output of uname instead of i386?
> 	echo i386-pc-interix
> 	exit 0 ;;
>     i*:UWIN*:*)
> 	echo ${UNAME_MACHINE}-pc-uwin
> 	exit 0 ;;
554,558d648
< 	# uname on the ARM produces all sorts of strangeness, and we need to
< 	# filter it out.
< 	case "$UNAME_MACHINE" in
< 	  arm* | sa110*)	      UNAME_MACHINE="arm" ;;
< 	esac
561,562c651,653
< 	# first see if it will tell us.
< 	ld_help_string=`ld --help 2>&1`
---
> 	# first see if it will tell us. cd to the root directory to prevent
> 	# problems with other programs or directories called `ld' in the path.
> 	ld_help_string=`cd /; ld --help 2>&1`
570,575c661,731
< 	  i?86linux)  echo "${UNAME_MACHINE}-pc-linux-gnuaout"      ; exit 0 ;;
< 	  i?86coff)   echo "${UNAME_MACHINE}-pc-linux-gnucoff"      ; exit 0 ;;
< 	  sparclinux) echo "${UNAME_MACHINE}-unknown-linux-gnuaout" ; exit 0 ;;
< 	  armlinux)   echo "${UNAME_MACHINE}-unknown-linux-gnuaout" ; exit 0 ;;
< 	  m68klinux)  echo "${UNAME_MACHINE}-unknown-linux-gnuaout" ; exit 0 ;;
< 	  elf32ppc)   echo "powerpc-unknown-linux-gnu"              ; exit 0 ;;
---
> 	  *ia64)
> 		echo "${UNAME_MACHINE}-unknown-linux"
> 		exit 0
> 		;;
> 	  i?86linux)
> 		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
> 		exit 0
> 		;;
> 	  "Power Macintosh":Darwin:*:*)
> 		echo powerpc-apple-macosx
> 		exit 0 ;;
> 	  elf_i?86)
> 		echo "${UNAME_MACHINE}-pc-linux"
> 		exit 0
> 		;;
> 	  i?86coff)
> 		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
> 		exit 0
> 		;;
> 	  sparclinux)
> 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
> 		exit 0
> 		;;
> 	  armlinux)
> 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
> 		exit 0
> 		;;
> 	  elf32arm*)
> 		echo "${UNAME_MACHINE}-unknown-linux-gnuoldld"
> 		exit 0
> 		;;
> 	  armelf_linux*)
> 		echo "${UNAME_MACHINE}-unknown-linux-gnu"
> 		exit 0
> 		;;
> 	  m68klinux)
> 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
> 		exit 0
> 		;;
> 	  elf32ppc | elf32ppclinux)
> 		# Determine Lib Version
> 		cat >$dummy.c <<EOF
> #include <features.h>
> #if defined(__GLIBC__)
> extern char __libc_version[];
> extern char __libc_release[];
> #endif
> main(argc, argv)
>      int argc;
>      char *argv[];
> {
> #if defined(__GLIBC__)
>   printf("%s %s\n", __libc_version, __libc_release);
> #else
>   printf("unkown\n");
> #endif
>   return 0;
> }
> EOF
> 		LIBC=""
> 		$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null
> 		if test "$?" = 0 ; then
> 			./$dummy | grep 1\.99 > /dev/null
> 			if test "$?" = 0 ; then
> 				LIBC="libc1"
> 			fi
> 		fi
> 		rm -f $dummy.c $dummy
> 		echo powerpc-unknown-linux-gnu${LIBC}
> 		exit 0
> 		;;
579c735,740
< 		sed 's/^	//'  <<EOF >$dummy.s
---
> 		cat <<EOF >$dummy.s
> 			.data
> 		\$Lformat:
> 			.byte 37,100,45,37,120,10,0	# "%d-%x\n"
> 
> 			.text
580a742
> 			.align 4
583,593c745,757
< 		.frame \$30,0,\$26,0
< 		.prologue 0
< 		.long 0x47e03d80 # implver $0
< 		lda \$2,259
< 		.long 0x47e20c21 # amask $2,$1
< 		srl \$1,8,\$2
< 		sll \$2,2,\$2
< 		sll \$0,3,\$0
< 		addl \$1,\$0,\$0
< 		addl \$2,\$0,\$0
< 		ret \$31,(\$26),1
---
> 			.frame \$30,16,\$26,0
> 			ldgp \$29,0(\$27)
> 			.prologue 1
> 			.long 0x47e03d80 # implver \$0
> 			lda \$2,-1
> 			.long 0x47e20c21 # amask \$2,\$1
> 			lda \$16,\$Lformat
> 			mov \$0,\$17
> 			not \$1,\$18
> 			jsr \$26,printf
> 			ldgp \$29,0(\$26)
> 			mov 0,\$16
> 			jsr \$26,exit
597c761
< 		${CC-cc} $dummy.s -o $dummy 2>/dev/null
---
> 		$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null
599,601c763,764
< 			./$dummy
< 			case "$?" in
< 			7)
---
> 			case `./$dummy` in
> 			0-0)
604c767
< 			15)
---
> 			1-0)
607c770
< 			14)
---
> 			1-1)
610c773
< 			10)
---
> 			1-101)
613c776
< 			16)
---
> 			2-303)
615a779,781
> 			2-307)
> 				UNAME_MACHINE="alphaev67"
> 				;;
628,631c794,799
< main(argc, argv)
<      int argc;
<      char *argv[];
< {
---
> #ifdef __cplusplus
> #include <stdio.h>  /* for printf() prototype */
> 	int main (int argc, char *argv[]) {
> #else
> 	int main (argc, argv) int argc; char *argv[]; {
> #endif
641c809
< 	  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
---
> 	  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
642a811,812
> 	elif test "${UNAME_MACHINE}" = "s390"; then
> 	  echo s390-ibm-linux && exit 0
663,666c833,838
< main(argc, argv)
<      int argc;
<      char *argv[];
< {
---
> #ifdef __cplusplus
> #include <stdio.h>  /* for printf() prototype */
> 	int main (int argc, char *argv[]) {
> #else
> 	int main (argc, argv) int argc; char *argv[]; {
> #endif
683c855
< 	  ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
---
> 	  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
699a872
> 	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
701c874,883
< 		echo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}
---
> 		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
> 	else
> 		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
> 	fi
> 	exit 0 ;;
>     i?86:*:5:7*)
>         # Fixed at (any) Pentium or better
>         UNAME_MACHINE=i586
>         if [ ${UNAME_SYSTEM} = "UnixWare" ] ; then
> 	    echo ${UNAME_MACHINE}-sco-sysv${UNAME_RELEASE}uw${UNAME_VERSION}
714a897,900
> 		(/bin/uname -X|egrep '^Machine.*Pent ?II' >/dev/null) \
> 			&& UNAME_MACHINE=i686
> 		(/bin/uname -X|egrep '^Machine.*Pentium Pro' >/dev/null) \
> 			&& UNAME_MACHINE=i686
720,725c906,907
<     i?86:UnixWare:*:*)
< 	if /bin/uname -X 2>/dev/null >/dev/null ; then
< 	  (/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \
< 	    && UNAME_MACHINE=i586
< 	fi
< 	echo ${UNAME_MACHINE}-unixware-${UNAME_RELEASE}-${UNAME_VERSION}
---
>     i?86:*DOS:*:*)
> 	echo ${UNAME_MACHINE}-pc-msdosdjgpp
727a910
> 	# Left here for compatibility:
768c951
<     i?86:LynxOS:2.*:*)
---
>     i?86:LynxOS:2.*:* | i?86:LynxOS:3.[01]*:*)
779a963,965
>     RM*:ReliantUNIX-*:*:*)
> 	echo mips-sni-sysv4
> 	exit 0 ;;
810c996
<     R3000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R4000:UNIX_SV:*:*)
---
>     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
837a1024,1044
>     *:Darwin:*:*)
> 	echo `uname -p`-apple-darwin${UNAME_RELEASE}
> 	exit 0 ;;
>     *:procnto*:*:* | *:QNX:[0123456789]*:*)
> 	if test "${UNAME_MACHINE}" = "x86pc"; then
> 		UNAME_MACHINE=pc
> 	fi
> 	echo `uname -p`-${UNAME_MACHINE}-nto-qnx
> 	exit 0 ;;
>     *:QNX:*:4*)
> 	echo i386-pc-qnx
> 	exit 0 ;;
>     NSR-W:NONSTOP_KERNEL:*:*)
> 	echo nsr-tandem-nsk${UNAME_RELEASE}
> 	exit 0 ;;
>     BS2000:POSIX*:*:*)
> 	echo bs2000-siemens-sysv
> 	exit 0 ;;
>     DS/*:UNIX_System_V:*:*)
> 	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
> 	exit 0 ;;
944c1151
< ${CC-cc} $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0
---
> $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0
