1.1          (acg      15-Dec-06): /*****************************************************************************
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):   The following code is derived, directly or indirectly, from the SystemC
1.3          (acg      18-Feb-11):   source code Copyright (c) 1996-2011 by all Contributors.
1.1          (acg      15-Dec-06):   All Rights reserved.
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):   The contents of this file are subject to the restrictions and limitations
1.3          (acg      18-Feb-11):   set forth in the SystemC Open Source License Version 3.0 (the "License");
1.1          (acg      15-Dec-06):   You may not use this file except in compliance with such restrictions and
1.1          (acg      15-Dec-06):   limitations. You may obtain instructions on how to receive a copy of the
1.1          (acg      15-Dec-06):   License at http://www.systemc.org/. Software distributed by Contributors
1.1          (acg      15-Dec-06):   under the License is distributed on an "AS IS" basis, WITHOUT WARRANTY OF
1.1          (acg      15-Dec-06):   ANY KIND, either express or implied. See the License for the specific
1.1          (acg      15-Dec-06):   language governing rights and limitations under the License.
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):  *****************************************************************************/
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): /*****************************************************************************
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):   sc_report_handler.h - 
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):   Original Author: Alex Riesen, Synopsys, Inc.
1.1          (acg      15-Dec-06):   see also sc_report.h
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):  *****************************************************************************/
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): /*****************************************************************************
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):   MODIFICATION LOG - modifiers, enter your name, affiliation, date and
1.1          (acg      15-Dec-06):   changes you are making here.
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):       Name, Affiliation, Date:
1.1          (acg      15-Dec-06):   Description of Modification:
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):  *****************************************************************************/
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): // $Log: sc_report_handler.h,v $
1.4          (acg      23-Mar-11): // Revision 1.3  2011/02/18 20:38:44  acg
1.4          (acg      23-Mar-11): //  Andy Goodrich: Updated Copyright notice.
1.4          (acg      23-Mar-11): //
1.3          (acg      18-Feb-11): // Revision 1.2  2011/02/01 23:02:05  acg
1.3          (acg      18-Feb-11): //  Andy Goodrich: IEEE 1666 2011 changes.
1.3          (acg      18-Feb-11): //
1.2          (acg      01-Feb-11): // Revision 1.1.1.1  2006/12/15 20:20:06  acg
1.2          (acg      01-Feb-11): // SystemC 2.3
1.2          (acg      01-Feb-11): //
1.1          (acg      15-Dec-06): // Revision 1.3  2006/01/13 18:53:11  acg
1.1          (acg      15-Dec-06): // Andy Goodrich: Added $Log command so that CVS comments are reproduced in
1.1          (acg      15-Dec-06): // the source.
1.1          (acg      15-Dec-06): //
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): #ifndef SC_REPORT_HANDLER_H
1.1          (acg      15-Dec-06): #define SC_REPORT_HANDLER_H
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): namespace sc_core {
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): // ----------------------------------------------------------------------------
1.1          (acg      15-Dec-06): //  STRUCT : sc_msg_def
1.1          (acg      15-Dec-06): //
1.1          (acg      15-Dec-06): //  Exception message definition structure
1.1          (acg      15-Dec-06): // ----------------------------------------------------------------------------
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): struct sc_msg_def
1.1          (acg      15-Dec-06): {
1.1          (acg      15-Dec-06):     const char*  msg_type;
1.1          (acg      15-Dec-06):     sc_actions   actions;
1.1          (acg      15-Dec-06):     sc_actions   sev_actions[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     unsigned     limit;
1.1          (acg      15-Dec-06):     unsigned     sev_limit[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     unsigned     limit_mask; // 0 - limit, 1..4 - sev_limit
1.1          (acg      15-Dec-06):     unsigned     call_count;
1.1          (acg      15-Dec-06):     unsigned     sev_call_count[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     char*        msg_type_data;
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     int          id; // backward compatibility with 2.0+
1.1          (acg      15-Dec-06): };
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): typedef void (* sc_report_handler_proc)(const sc_report&, const sc_actions &);
1.1          (acg      15-Dec-06): class sc_report;
1.1          (acg      15-Dec-06): extern bool sc_report_close_default_log();
1.1          (acg      15-Dec-06): class sc_report_handler
1.1          (acg      15-Dec-06): {
1.1          (acg      15-Dec-06): public:
1.1          (acg      15-Dec-06):     static void report(sc_severity,
1.1          (acg      15-Dec-06): 		       const char* msg_type,
1.1          (acg      15-Dec-06): 		       const char* msg,
1.1          (acg      15-Dec-06): 		       const char* file,
1.1          (acg      15-Dec-06): 		       int line);
1.1          (acg      15-Dec-06): 
1.2          (acg      01-Feb-11):     static void report( sc_severity, 
1.2          (acg      01-Feb-11):                         const char* msg_type, 
1.2          (acg      01-Feb-11): 			const char* msg, 
1.2          (acg      01-Feb-11):                         int verbosity, 
1.2          (acg      01-Feb-11): 			const char* file, 
1.2          (acg      01-Feb-11): 			int line );
1.2          (acg      01-Feb-11): 
1.1          (acg      15-Dec-06):     static sc_actions set_actions(sc_severity,
1.1          (acg      15-Dec-06): 				  sc_actions = SC_UNSPECIFIED);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_actions set_actions(const char * msg_type,
1.1          (acg      15-Dec-06): 				  sc_actions = SC_UNSPECIFIED);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_actions set_actions(const char * msg_type,
1.1          (acg      15-Dec-06): 				  sc_severity,
1.1          (acg      15-Dec-06): 				  sc_actions = SC_UNSPECIFIED);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static int stop_after(sc_severity, int limit = -1);
1.1          (acg      15-Dec-06):     static int stop_after(const char* msg_type, int limit = -1);
1.1          (acg      15-Dec-06):     static int stop_after(const char* msg_type, sc_severity, int limit = -1);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_actions suppress(sc_actions);
1.1          (acg      15-Dec-06):     static sc_actions suppress();
1.1          (acg      15-Dec-06):     static sc_actions force(sc_actions);
1.1          (acg      15-Dec-06):     static sc_actions force();
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static int get_count(sc_severity severity_);
1.1          (acg      15-Dec-06):     static int get_count(const char* msg_type_);
1.4          (acg      23-Mar-11):     static int get_count(const char* msg_type_, sc_severity severity_);
1.4          (acg      23-Mar-11): 
1.4          (acg      23-Mar-11):     static int get_verbosity_level();
1.4          (acg      23-Mar-11):     static int set_verbosity_level( int level );
1.4          (acg      23-Mar-11): 
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static void initialize(); // just reset counters
1.1          (acg      15-Dec-06):     static void release(); // initialize() needed for reports after it
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static void set_handler(sc_report_handler_proc);
1.1          (acg      15-Dec-06):     // use set_handler(&sc_report_handler::default_handler); to restore
1.1          (acg      15-Dec-06):     static void default_handler(const sc_report&, const sc_actions&);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_actions get_new_action_id();
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_report* get_cached_report();
1.1          (acg      15-Dec-06):     static void clear_cached_report();
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     // if filename is NULL, the previous log file name will be removed.
1.1          (acg      15-Dec-06):     // The provider of a report_handler supposed to handle this.
1.1          (acg      15-Dec-06):     // Return false if filename is not NULL and filename is already set.
1.1          (acg      15-Dec-06):     static bool set_log_file_name(const char* filename);
1.1          (acg      15-Dec-06):     static const char* get_log_file_name();
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): public: // private, actually
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     struct msg_def_items
1.1          (acg      15-Dec-06):     {
1.1          (acg      15-Dec-06): 	sc_msg_def*     md;        // have to point to sc_msg_def-s
1.1          (acg      15-Dec-06): 	int             count;     // set to number of items in md[]
1.1          (acg      15-Dec-06): 	bool            allocated; // used internally, previous value ignored
1.1          (acg      15-Dec-06): 	msg_def_items*  next;      // used internally, previous value ignored
1.1          (acg      15-Dec-06):     };
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static void add_static_msg_types(msg_def_items *);
1.1          (acg      15-Dec-06):     static sc_msg_def* add_msg_type(const char * msg_type);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): protected:
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static void cache_report(const sc_report&);
1.1          (acg      15-Dec-06):     static sc_actions execute(sc_msg_def*, sc_severity);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_actions   suppress_mask;
1.1          (acg      15-Dec-06):     static sc_actions   force_mask;
1.1          (acg      15-Dec-06):     static sc_actions   sev_actions[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     static unsigned     sev_limit[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     static unsigned     sev_call_count[SC_MAX_SEVERITY];
1.1          (acg      15-Dec-06):     static sc_report*   last_global_report;
1.1          (acg      15-Dec-06):     static sc_actions   available_actions;
1.1          (acg      15-Dec-06):     static char*        log_file_name;
1.4          (acg      23-Mar-11):     static int          verbosity_level;
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static msg_def_items*  messages;
1.1          (acg      15-Dec-06):     static msg_def_items   msg_terminator;
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_report_handler_proc  handler;
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static sc_msg_def* mdlookup(const char* msg_type);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): private: // backward compatibility with 2.0+
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     friend class sc_report;
1.1          (acg      15-Dec-06):     static sc_msg_def* mdlookup(int id);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): public:
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06):     static void report(sc_severity,
1.1          (acg      15-Dec-06): 		       int         id,
1.1          (acg      15-Dec-06): 		       const char* add_msg,
1.1          (acg      15-Dec-06): 		       const char* file,
1.1          (acg      15-Dec-06): 		       int         line);
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): };
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): } // namespace sc_core
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): #endif
1.1          (acg      15-Dec-06): 
1.1          (acg      15-Dec-06): // Taf!
