.TH "tlm_slave_socket" 3 "17 Oct 2007" "Version 1" "TLM 2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tlm_slave_socket \- 
.SH SYNOPSIS
.br
.PP
\fC#include <tlm_slave_socket.h>\fP
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef IF \fBinterface_type\fP"
.br
.ti -1c
.RI "typedef sc_port< \fBinterface_type\fP > \fBport_type\fP"
.br
.ti -1c
.RI "typedef sc_export< \fBinterface_type\fP > \fBexport_type\fP"
.br
.ti -1c
.RI "typedef \fBtlm_master_socket\fP< \fBinterface_type\fP > \fBmaster_socket_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtlm_slave_socket\fP (const char *name)"
.br
.ti -1c
.RI "void \fBbind\fP (\fBmaster_socket_type\fP &s)"
.br
.ti -1c
.RI "void \fBoperator()\fP (\fBmaster_socket_type\fP &s)"
.br
.ti -1c
.RI "void \fBbind\fP (\fBtlm_slave_socket\fP &s)"
.br
.ti -1c
.RI "void \fBoperator()\fP (\fBtlm_slave_socket\fP &s)"
.br
.ti -1c
.RI "void \fBbind\fP (\fBinterface_type\fP &ifs)"
.br
.ti -1c
.RI "void \fBoperator()\fP (\fBinterface_type\fP &s)"
.br
.ti -1c
.RI "\fBinterface_type\fP * \fBoperator->\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBport_type\fP \fBmPort\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBtlm_master_socket< interface_type >\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename IF> class tlm_slave_socket< IF >"

.PP
Definition at line 26 of file tlm_slave_socket.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename IF> typedef IF \fBtlm_slave_socket\fP< IF >::\fBinterface_type\fP"
.PP
Definition at line 29 of file tlm_slave_socket.h.
.SS "template<typename IF> typedef sc_port<\fBinterface_type\fP> \fBtlm_slave_socket\fP< IF >::\fBport_type\fP"
.PP
Definition at line 30 of file tlm_slave_socket.h.
.SS "template<typename IF> typedef sc_export<\fBinterface_type\fP> \fBtlm_slave_socket\fP< IF >::\fBexport_type\fP"
.PP
Definition at line 31 of file tlm_slave_socket.h.
.SS "template<typename IF> typedef \fBtlm_master_socket\fP<\fBinterface_type\fP> \fBtlm_slave_socket\fP< IF >::\fBmaster_socket_type\fP"
.PP
Definition at line 32 of file tlm_slave_socket.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename IF> \fBtlm_slave_socket\fP< IF >::\fBtlm_slave_socket\fP (const char * name)\fC [inline]\fP"
.PP
Definition at line 37 of file tlm_slave_socket.h.
.SH "Member Function Documentation"
.PP 
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::bind (\fBmaster_socket_type\fP & s)\fC [inline]\fP"
.PP
Definition at line 47 of file tlm_slave_socket.h.
.PP
References tlm_master_socket< IF >::mExport, and tlm_slave_socket< IF >::mPort.
.PP
Referenced by tlm_slave_socket< IF >::operator()().
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::operator() (\fBmaster_socket_type\fP & s)\fC [inline]\fP"
.PP
Definition at line 55 of file tlm_slave_socket.h.
.PP
References tlm_slave_socket< IF >::bind().
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::bind (\fBtlm_slave_socket\fP< IF > & s)\fC [inline]\fP"
.PP
Definition at line 64 of file tlm_slave_socket.h.
.PP
References tlm_slave_socket< IF >::mPort.
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::operator() (\fBtlm_slave_socket\fP< IF > & s)\fC [inline]\fP"
.PP
Definition at line 72 of file tlm_slave_socket.h.
.PP
References tlm_slave_socket< IF >::bind().
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::bind (\fBinterface_type\fP & ifs)\fC [inline]\fP"
.PP
Definition at line 81 of file tlm_slave_socket.h.
.SS "template<typename IF> void \fBtlm_slave_socket\fP< IF >::operator() (\fBinterface_type\fP & s)\fC [inline]\fP"
.PP
Definition at line 86 of file tlm_slave_socket.h.
.PP
References tlm_slave_socket< IF >::bind().
.SS "template<typename IF> \fBinterface_type\fP* \fBtlm_slave_socket\fP< IF >::operator-> ()\fC [inline]\fP"
.PP
Definition at line 94 of file tlm_slave_socket.h.
.PP
References tlm_slave_socket< IF >::mPort.
.SH "Friends And Related Function Documentation"
.PP 
.SS "template<typename IF> friend class \fBtlm_master_socket\fP< \fBinterface_type\fP >\fC [friend]\fP"
.PP
Definition at line 34 of file tlm_slave_socket.h.
.SH "Member Data Documentation"
.PP 
.SS "template<typename IF> \fBport_type\fP \fBtlm_slave_socket\fP< IF >::\fBmPort\fP\fC [protected]\fP"
.PP
Definition at line 100 of file tlm_slave_socket.h.
.PP
Referenced by tlm_slave_socket< IF >::bind(), tlm_master_socket< IF >::bind(), and tlm_slave_socket< IF >::operator->().

.SH "Author"
.PP 
Generated automatically by Doxygen for TLM 2 from the source code.
