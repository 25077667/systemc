.TH "tlm_event_finder_t" 3 "17 Oct 2007" "Version 1" "TLM 2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tlm_event_finder_t \- 
.SH SYNOPSIS
.br
.PP
\fC#include <tlm_event_finder.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtlm_event_finder_t\fP (const sc_port_base &port_, const sc_event &(IF::*event_method_)(\fBtlm_tag\fP< T > *) const )"
.br
.ti -1c
.RI "virtual \fB~tlm_event_finder_t\fP ()"
.br
.ti -1c
.RI "virtual const sc_event & \fBfind_event\fP () const "
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBtlm_event_finder_t\fP ()"
.br
.ti -1c
.RI "\fBtlm_event_finder_t\fP (const \fBtlm_event_finder_t\fP< IF, T > &)"
.br
.ti -1c
.RI "\fBtlm_event_finder_t\fP< IF, T > & \fBoperator=\fP (const \fBtlm_event_finder_t\fP< IF, T > &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const sc_event &(IF::* \fBm_event_method\fP )(\fBtlm_tag\fP< T > *) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class IF, class T> class tlm_event_finder_t< IF, T >"

.PP
Definition at line 28 of file tlm_event_finder.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class IF, class T> \fBtlm_event_finder_t\fP< IF, T >::\fBtlm_event_finder_t\fP (const sc_port_base & port_, const sc_event &(IF::*)(\fBtlm_tag\fP< T > *) const  event_method_)\fC [inline]\fP"
.PP
Definition at line 35 of file tlm_event_finder.h.
.SS "template<class IF, class T> virtual \fBtlm_event_finder_t\fP< IF, T >::~\fBtlm_event_finder_t\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 42 of file tlm_event_finder.h.
.SS "template<class IF, class T> \fBtlm_event_finder_t\fP< IF, T >::\fBtlm_event_finder_t\fP ()\fC [private]\fP"
.PP
.SS "template<class IF, class T> \fBtlm_event_finder_t\fP< IF, T >::\fBtlm_event_finder_t\fP (const \fBtlm_event_finder_t\fP< IF, T > &)\fC [private]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "template<class IF, class T> const sc_event & \fBtlm_event_finder_t\fP< IF, T >::find_event () const\fC [inline, virtual]\fP"
.PP
Definition at line 63 of file tlm_event_finder.h.
.PP
References tlm_event_finder_t< IF, T >::m_event_method.
.SS "template<class IF, class T> \fBtlm_event_finder_t\fP<IF,T>& \fBtlm_event_finder_t\fP< IF, T >::operator= (const \fBtlm_event_finder_t\fP< IF, T > &)\fC [private]\fP"
.PP
.SH "Member Data Documentation"
.PP 
.SS "template<class IF, class T> const sc_event&(IF::* \fBtlm_event_finder_t\fP< IF, T >::\fBm_event_method\fP)(\fBtlm_tag\fP< T > *) const \fC [private]\fP"
.PP
Referenced by tlm_event_finder_t< IF, T >::find_event().

.SH "Author"
.PP 
Generated automatically by Doxygen for TLM 2 from the source code.
