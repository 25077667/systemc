0002 - The namespace for tlm_analysis needs to be renamed 'tlm_analysis'. It is
       presently named 'analysis'.
       [TW] Agreed. Further, we need to add the tlm_ prefix to the classnames.
       [OS] No action is required for the namespaces, everything is now
            natively in namespace tlm. I agree with the class names.

0003 - /include/tlm_h/tlm_generic_payload/tlm_helpers.h needs to be renamed
       'tlm_gp_helpers.h' or promoted to tlm_core
       [OS]: namespace part is fixed.

0004 - There are variables beginning with underscore characters (_)

0005 - Endianness can be determined using #include <endian.h> which defines
       __BYTE_ORDER, __LITTLE_ENDIAN and __BIG_ENDIAN for gcc compilers. An
       addition can be made to tlm_platform.h for MSVC. (MacOSX runs on both
       big and little endian architectures)


0011 - explicitly sized variables (8, 16, 32, 64) should use explicitly sized
       type [u]int[8,16,32,64]_t or sc_dt::[u]int64 over compiler dependent
       types (char, short, long) as these vary by implementation <stdint.h>

0012 - all 64-bit variables should use sc_dt::[u]int64 or [u]int64_t <stdint.h>
       as long long is not part of the C++ standard

0013 - there is a circular include file reference
       /include/tlm_h/tlm_core/tlm_fifo/tlm_fifo.h
       /include/tlm_h/tlm_core/tlm_fifo/tlm_fifo_put_get.h
       
0016 - I think we need to review the changes in the tlm_core directory from TLM
       1.0 to now. There are quite a few changes, and the question is if we
       really want to have those, or if the changes are only artifacts of the
       draft 1 release that are obsolete now. I don't know.
       [John's addition]: We need to remove the "delayed and annotated
       blocking and non-blocking interfaces" of the TLM2.0-draft1 kit?

0017 - Can we rename the tlm_core directory to something more meaningful?  If I
       understand it correctly, then the tlm_core is supposed to hold the TLM
       1.0 interfaces, which in my mind are not at the core of things for 2.0.

0018 - TLM 2 requirement 8.5 specifies the examples and unit tests
       (regressions) pass Purify.  Question: Who will be responsible for this?
       [TW] I propose the primary code author be responsible for purify analysis;
       if Purify isn't accessible, I think a comparable code quality tool may
       be substituted.
       
0019 - TLM ports initiator/target ports do not appear to have the GP material
       integrated

0020 - TLM ports master/slave need to be changed to initiator/target
       (2007-10-18 call)

0023 - GP extension test (make run) fails on Intel Macintosh
       make: *** [run] Error 139
       [OS]: candidate is array bounds write violation in
       tlm_annotated::tlm_generic_payload_ns::copy_data(unsigned char...
       [OS]: fixed a wrong delete in ~tlm_memory, but did it help?
       [CW]: I've udpated tlm_helper.h to generically detect endianness and no
       longer see this problem.
       
0024 - GP extension test (./generic_payload_extension.exe) seg faults on Intel
       Macintosh
       [CW]: I've udpated tlm_helper.h to generically detect endianness and no
       longer see this problem.

0025 - GP test (make run) produces incorrect results on Intel Macintosh (not
       correctly detecting endianness)
       [CW]: I've udpated tlm_helper.h to generically detect endianness and no
       longer see this problem.
